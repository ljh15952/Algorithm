#include <iostream>

using namespace std;

int main(){
		
	//시간복잡도 
	//입력된 자료의 양과 알고리즘 실행에 걸리는 시간 사이의 관계
	
	//Big-O 표기 법
	//O(n)의 시간복잡도를 가진 1부터10까지 더하는 
	//코드1
	int n = 0;
	for(int i = 1; i <= 10; ++i){
		n += i;
	}
	cout << n << endl;
	
	//O(1)의 시간복잡도를 가진 1부터10까지 더하는 
	//코드2
	int m = 10;
	cout << m * (m+1) / 2 << endl;
	
	//코드1은 n번의 연산이 일어남, 코드2는 n에 관계없이 상수 시간 안에 계산 처리
	//Big O 표기법에서 상수는 무시
	//O(2n+5) = O(2n) -> n이 커지면 둘의 차이는 없는 것과 마찬가지
	
	//자주 등장하는 알고리즘의 시간 복잡도 빠른 순
	//O(1) 상수 형태. n의 값에 상관없이 일정한 양의 계산만
	//O(log n) 로그 형태
	//O(n) 선형
	//O(n log n) 선형로그 형태
	//O(n²), O(n³) 다차 형태
	//O(2ⁿ) 지수 형태
	//O(n!) 팩토리얼 형태
	
	
	return 0;
}





