비선형 자료구조
선형 자료구조가 아닌 모든 자료구조
사전적인 정의는 i번째 값을 탐색한 뒤의 i+1이 정해지지 않은 구조

-그래프
점, 점을 연걸하는 선들로 이루어진 지도 비슷한 느낌
점을 정점(vertex), 선은 간선(edge)라고 부른다.

struct Edge
{
	int snode; //시작 정점
	int enode; //종료 정점
	int cost; //가중치를 가지는 간선에 사용된다.
}
(정점이 아닌 간선을 구조체로?) 
위의 struct Edge가 하나 이상 있는 것이 바로 그래프이다.
그래프를 다르게 구현하는 경우 -인접행렬, -인접 리스트

관련 용어
정점, 간선, 단방향 간선, 양방향 간선, 재귀 간선, 사이클
고립 정점, 인접(두 정점이 하나의 간선으로 연결되어 있을 때 두 정점이 인접하다.)
차수(Degree, 정점에 연결된 간선의 수), 진입 차수(정점으로 들어오는 간선의 수), 진출 차수(정점에서 나가는 간선의 수)

그래프 순회 알고리즘
그래프를 순회하는 방법, 각 방법마다 장단점이 있으니 상황에 따라 적절한 알고리즘을 선택하는 것이 중요하다.

-깊이 우선 탐색
Depth First Search, DFS라고 불리며, 구현하기 쉬운 알고리즘 중 하나이다.
방문한 정점으로 부터 깊게 들어가며 쭉 탐색한 후, 되돌아 나오다가 아직 탐색하지 않은 노드를 탐색하는 방식
실행과정
1. 첫 정점을 방문한다.
2. 인접한 정점 중 아직 방문하지 않은 정점을 방문한다.(한 길로 쭉 파고 들어간다.)
3. 더 이상 들어갈 길이 없을 때(인접한 모든 정점이 이미 방문한 정점 일때), 방문하지 않은 인접한 정점을
찾을 때까지 들어간 길을 돌아나온다.
4. 위 과정을 반복한다.

깊이가 너무 큰 경우 런타임 에러 가능성


-너비 우선 탐색
Breadth First Search, BFS
실행과정
1. 첫 정점을 방문한다.
2. 아직 방문하지 않은 인접한 정점들을 큐에 넣는다.
3. 큐에 있는 정점들을 순서대로 방문한다.
4. 큐에 있는 정점에 대해 인접하면서 아직 방문하지 않은 정점들로 새로운 큐를 구성한다.
5. 위 과정 방복

특정 조건의 최단 경로 알고리즘을 계산할 때 주로 사용